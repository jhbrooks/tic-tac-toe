var search_data = {"index":{"searchIndex":["computerai","tictactoe","board","game","player","state","available_moves()","best_moves()","best_score()","board_graphic()","create()","full?()","graphic()","look_ahead()","new()","new()","new()","new()","play_with_foresight()","random_move()","score_and_revert()","square()","start()","tie?()","update()","update_board()","win?()","readme"],"longSearchIndex":["computerai","tictactoe","tictactoe::board","tictactoe::game","tictactoe::player","tictactoe::state","tictactoe::state#available_moves()","computerai#best_moves()","computerai#best_score()","tictactoe::state#board_graphic()","tictactoe::game::create()","tictactoe::board#full?()","tictactoe::board#graphic()","computerai#look_ahead()","tictactoe::board::new()","tictactoe::game::new()","tictactoe::player::new()","tictactoe::state::new()","computerai#play_with_foresight()","computerai#random_move()","computerai#score_and_revert()","tictactoe::board#square()","tictactoe::game#start()","tictactoe::state#tie?()","tictactoe::board#update()","tictactoe::state#update_board()","tictactoe::state#win?()",""],"info":[["ComputerAI","","ComputerAI.html","","<p>This module handles computer AI for a game (currently tested for Tic Tac\nToe)\n<p>For Tic Tac Toe, for boards …\n"],["TicTacToe","","TicTacToe.html","","<p>This module wraps a Tic Tac Toe game in its own namespace\n"],["TicTacToe::Board","","TicTacToe/Board.html","","<p>This class handles board information\n"],["TicTacToe::Game","","TicTacToe/Game.html","","<p>This class operates a Tic Tac Toe game\n"],["TicTacToe::Player","","TicTacToe/Player.html","","<p>This class handles player information\n<p>type should be :human or :computer (others will cause computer behavior) …\n"],["TicTacToe::State","","TicTacToe/State.html","","<p>This class handles game state information\n"],["available_moves","TicTacToe::State","TicTacToe/State.html#method-i-available_moves","()",""],["best_moves","ComputerAI","ComputerAI.html#method-i-best_moves","(scored_moves)",""],["best_score","ComputerAI","ComputerAI.html#method-i-best_score","(scores)",""],["board_graphic","TicTacToe::State","TicTacToe/State.html#method-i-board_graphic","(line_width)",""],["create","TicTacToe::Game","TicTacToe/Game.html#method-c-create","(type_1, type_2)",""],["full?","TicTacToe::Board","TicTacToe/Board.html#method-i-full-3F","()",""],["graphic","TicTacToe::Board","TicTacToe/Board.html#method-i-graphic","(line_width)",""],["look_ahead","ComputerAI","ComputerAI.html#method-i-look_ahead","(sight)",""],["new","TicTacToe::Board","TicTacToe/Board.html#method-c-new","(dimension)",""],["new","TicTacToe::Game","TicTacToe/Game.html#method-c-new","(p1, p2, board)",""],["new","TicTacToe::Player","TicTacToe/Player.html#method-c-new","(name, mark, type, sight)",""],["new","TicTacToe::State","TicTacToe/State.html#method-c-new","(current_player, board, last_move)",""],["play_with_foresight","ComputerAI","ComputerAI.html#method-i-play_with_foresight","(sight)",""],["random_move","ComputerAI","ComputerAI.html#method-i-random_move","(moves)",""],["score_and_revert","ComputerAI","ComputerAI.html#method-i-score_and_revert","(move, sight)",""],["square","TicTacToe::Board","TicTacToe/Board.html#method-i-square","(row, column)",""],["start","TicTacToe::Game","TicTacToe/Game.html#method-i-start","()",""],["tie?","TicTacToe::State","TicTacToe/State.html#method-i-tie-3F","()",""],["update","TicTacToe::Board","TicTacToe/Board.html#method-i-update","(row, column, mark)",""],["update_board","TicTacToe::State","TicTacToe/State.html#method-i-update_board","(move, mark)",""],["win?","TicTacToe::State","TicTacToe/State.html#method-i-win-3F","()",""],["README","","README_md.html","","<p>tic-tac-toe\n<p>Tic Tac Toe implementation in Ruby\n"]]}}